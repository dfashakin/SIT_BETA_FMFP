import App from '../Page-Objects/Pages/App'
import SIT_Login from '../Page-Objects/Pages/SIT_Login';
import SIT_Flood_Risk_Planning from '../Page-Objects/Pages/SIT_Flood_Risk_Planning';
import SIT_Find_Location from '../Page-Objects/Pages/SIT_Find_Location'
import SIT_Confirm_Location from '../Page-Objects/Pages/SIT_Confirm_Location'
import SIT_Flood_Risk_Information from '../Page-Objects/Pages/SIT_Flood_Risk_Information'
import SIT_Flood_Risk_Assessment_Data from '../Page-Objects/Pages/SIT_Flood_Risk_Assessment_Data';
import SIT_Application_Complete from '../Page-Objects/Pages/SIT_Application_Complete';

describe('Validate that the Application Complete Page is Displayed', () => {
	it('Validate Navigation to the Flood Risk Assessment Data Page', () => {
        App.openHomepage();
		App.setWindowSize();
        SIT_Login.loginValidCredentials();
		browser.pause(3000);
		SIT_Flood_Risk_Planning.selectStartNowCommandButton();
		SIT_Find_Location.selectPlacePostcodeOptionButton();
		SIT_Find_Location.validatePostcodeEntry('CW5 5US');
		SIT_Find_Location.selectContinueCommandButton();
        const confirmLocationMap = SIT_Application_Complete.confirmLocationMap;
		confirmLocationMap.waitForExist();
        const confirmContinueCommandButton = SIT_Confirm_Location.confirmLocationContinueCommandButton;
		confirmContinueCommandButton.waitForExist();
		confirmContinueCommandButton.click();
		browser.pause(3000);
        const requestFloodRiskAssessmentData = $("//form[@action='/flood-zone-results']//a[@role='button']");
		requestFloodRiskAssessmentData.click();
        browser.pause(3000);
        const fuillNameTextBox = SIT_Flood_Risk_Assessment_Data.fuillNameTextBox;
		fuillNameTextBox.waitForExist();
		fuillNameTextBox.setValue('David Fashakin');
		const emailAddressTextBox = SIT_Flood_Risk_Assessment_Data.emailAddressTextBox;
        emailAddressTextBox.setValue('fmfptestapi@gmail.com');
		const continueAssessmentCommandButton = SIT_Flood_Risk_Assessment_Data.continueAssessmentCommandButton;
		continueAssessmentCommandButton.waitForExist();
        continueAssessmentCommandButton.click();
        browser.pause(3000);
        
    });

    it('Validate that the Help Footer Link is Displayed', () => {
		const helpFooterLink = SIT_Login.helpFooterLink;
		helpFooterLink.waitForExist();
		expect(helpFooterLink).toBeDisplayed();
	
	});

	

	it('Validate that the Accessibility footer Link', () => {
		const accessibilityFooterLink = SIT_Login.accessibilityFooterLink;
		expect(accessibilityFooterLink).toBeDisplayed();
	
	});

	it('Validate that the Cookie Footer Link is Displayed', () => {
	const cookiesFooterLink = SIT_Login.cookiesFooterLink;
	 expect(cookiesFooterLink).toBeDisplayed();
	});

	it('Validate that the Privacy Policy Link is Displayed', () => {
		const privacyPolicyLink = SIT_Login.privacyPolicyLinkDisplay;
		 expect(privacyPolicyLink).toBeDisplayed();
		});


		it('Validate that the Terms and conditions Link is Displayed', () => {
			const termsAndConditionsLink = SIT_Login.termsAndConditionsLink;
			 expect(termsAndConditionsLink).toBeDisplayed();
			});	

		it('Validate that the Contact Link is Displayed', () => {
		const contactLink = SIT_Login.contactLink;
		expect(contactLink).toBeDisplayed();
		});
		
		it('Validate that the Privacy Notice Link is Displayed', () => {
			const privacyNoticeLink = SIT_Login.privacyNoticeLink;
			expect(privacyNoticeLink).toBeDisplayed();
		});
	
		it('Validate that the CymraegLink is Displayed', () => {
			const cymraegLink = SIT_Login.cymraegLink;
			expect(cymraegLink).toBeDisplayed();
		});

		it('Validate that the Built by the Environment Agency Link is Displayed', () => {
			const builtByEnvironmentAgencyLink = SIT_Login.builtByEnvironmentAgencyLink;
			expect(builtByEnvironmentAgencyLink).toBeDisplayed();
		});

		it('Validate that the Crown Copyright Icon is Displayed', () => {
			const crownCopyrightLink = SIT_Login.crownCopyrightLink;
			expect(crownCopyrightLink).toBeDisplayed();
		});


		it('Validate that the Open Government Licence Link is Displayed', () => {
			const openGovernmentLicenceLink = SIT_Login.openGovernmentLicenceLink;
			expect(openGovernmentLicenceLink).toBeDisplayed();
		});

    it('Validate that the correct content is displayed on the Application Complete Page', () => {
        const applicationCompleteTitle = SIT_Application_Complete.applicationCompleteTitle;
        expect(applicationCompleteTitle).toHaveText('Application complete');
        const whatHappensNextTitleText = SIT_Application_Complete.whatHappensNextTitleText;
         expect(whatHappensNextTitleText).toHaveText('What happens next');
        const helpAndAdviceTitle = SIT_Application_Complete.helpAndAdviceTitle
         expect(helpAndAdviceTitle).toHaveText('Help and advice');
        
    });




    it('Validate that the correct page is Displayed if the product 5,6,7, and 8 Link is selected', () => {
        const product5678Link = SIT_Application_Complete.product5678Link;
        product5678Link.waitForExist();
        product5678Link.click();
        browser.pause(2000);
        expect(browser).toHaveUrl('https://www.gov.uk/guidance/flood-risk-assessment-for-planning-applications#get-information-to-complete-an-assessment');
        expect(browser).toHaveTitle("Flood risk assessments if you're applying for planning permission - GOV.UK");
        browser.back();
      });


    it('Validate that the correct page is displayed if the contact the environment agency Link is selected', () => {
        const contactEnvironmentAgencyLink = SIT_Application_Complete.contactEnvironmentAgencyLink;
        contactEnvironmentAgencyLink.waitForExist();
        contactEnvironmentAgencyLink.click();
        browser.pause(3000);
        expect(browser).toHaveUrl('https://www.gov.uk/guidance/flood-risk-assessment-for-planning-applications#contact');
        expect(browser).toHaveTitle("Flood risk assessments if you're applying for planning permission - GOV.UK");
        browser.pause(3000);
        browser.back();
      });

      it('Validate that the correct page is displayed if the Go Back to your flood Information Link is selected', () => {
        const goBackFloodInformationyLink = SIT_Application_Complete.goBackFloodInformationyLink;
        goBackFloodInformationyLink.waitForExist();
        goBackFloodInformationyLink.click();
        browser.pause(3000);
        expect(browser).toHaveUrl('https://fmp-tst-alb.aws.defra.cloud/flood-zone-results?easting=364780&northing=352583&location=CW5%205US');
        expect(browser).toHaveTitle('Flood risk information for this location');
        browser.pause(3000);
    });








    
});